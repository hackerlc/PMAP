apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'

repositories {
    flatDir {
        dir 'libs'
    }
}

android {
    compileSdkVersion 25
    buildToolsVersion "25.0.3"
    defaultConfig {
        applicationId "pmap.ycz.cn.pmap"
        minSdkVersion 16
        targetSdkVersion 25
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    signingConfigs {
        myConfig {
            storeFile file("./PMapKey.jks")
            storePassword 'pmapkey123123'
            keyAlias("pmap")
            keyPassword 'pmap123123'
        }
    }
    dataBinding{
        enabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.myConfig
        }
        debug {
            signingConfig signingConfigs.myConfig
        }
    }
    applicationVariants.all { variant ->

        if (variant.buildType.name.equals('release')) {
            variant.outputs.each { output ->
                def appName = 'Explore'
                def oldFile = output.outputFile
                def releaseApkName
                releaseApkName = appName + getVersionNameFromManifest()   + '.apk'
                output.outputFile = new File(oldFile.parent, releaseApkName)
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    lintOptions {
        abortOnError false
    }
    sourceSets {
        main {
            jniLibs.srcDir 'libs'
        }

        // Move the tests to tests/java, tests/res, etc...
        instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }
}

def getVersionNameFromManifest() {

    return android.defaultConfig.versionName+"-"+android.defaultConfig.versionCode
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    androidTestCompile('com.android.support.test.espresso:espresso-core:2.2.2', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    compile 'com.android.support:appcompat-v7:25.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'com.joker.gear:com-joker-gear:1.5.3'
    testCompile 'junit:junit:4.12'
}
